package mx.com.dmssoftware.formularioMedico;

import java.awt.Button;
import java.awt.Color;
import java.awt.Image;
import java.awt.Panel;
import java.sql.*;
import java.util.Random;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import mx.com.dmssoftware.conexionBD.ConexionBD;
import mx.com.dmssoftware.dependencias.TextPrompt;
import mx.com.dmssoftware.menuMP.MenuPrincipal;

/**
 *
 * @author Joseph
 */
public class MenuMedico extends javax.swing.JFrame {

    ConexionBD cc = new ConexionBD();
    Connection conn = cc.conexion();

    /**
     * Creates new form MenuMedico
     */
    public MenuMedico() {
        initComponents();
        btnMenu1.setBackground(new Color(0, 67, 97));
        btnEliminarCita.setBackground(new Color(0, 67, 97));
        btnCerrarSesion.setBackground(new Color(0, 67, 97));
        btnEliminarCita.setBackground(new Color(0, 67, 97));
        btnConsultaCitaPacientes1.setBackground(new Color(0, 67, 97));
        // btnEliminarCita1.setBackground(new Color(0, 67, 97));
        btnEliminarPaciente.setBackground(new Color(0, 67, 97));
        //     btnUsuario.setIcon(this.setIcono("/Imagenes/save.png", btnUsuario));
        aceptarOpcion();
        agregarTextoPrompt();

        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelAgendaCita = new javax.swing.JPanel();
        jPanelCitaPaciente = new javax.swing.JPanel();
        btnSolicitarCita = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtNombresPCita = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtApellidoPCita = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxMotivoCita = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel27 = new javax.swing.JLabel();
        txtIDCita = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel29 = new javax.swing.JLabel();
        txtEliminarCita = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        txtCitasAlmacenadas1 = new javax.swing.JTextField();
        btnEliminarCita = new javax.swing.JButton();
        btnConsultaCitaPacientes1 = new javax.swing.JButton();
        jPanelRegistroPacientes = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtIdPaciente = new javax.swing.JTextField();
        btnEliminarPaciente = new javax.swing.JButton();
        btnConsultaPacientes = new javax.swing.JButton();
        jPanelConfiguraciones = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        btnCerrarSesion = new javax.swing.JButton();
        btnMenu1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 67, 97));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 67, 97));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(47, 205, 255), 3));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setBackground(new java.awt.Color(208, 247, 255));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(208, 247, 255));
        jLabel3.setText("Bienvenid@");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(208, 247, 255), new java.awt.Color(208, 247, 255)));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N

        jPanelAgendaCita.setBackground(new java.awt.Color(133, 221, 246));
        jPanelAgendaCita.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanelCitaPaciente.setBackground(new java.awt.Color(133, 221, 246));
        jPanelCitaPaciente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(47, 205, 255), 3));
        jPanelCitaPaciente.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSolicitarCita.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSolicitarCita.setText("Agendar Cita");
        btnSolicitarCita.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 67, 97), 3));
        btnSolicitarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolicitarCitaActionPerformed(evt);
            }
        });
        jPanelCitaPaciente.add(btnSolicitarCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 370, 90, 40));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 154, 148));
        jLabel8.setText("Nombre(s):");
        jLabel8.setToolTipText("");
        jPanelCitaPaciente.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 140, -1));

        txtNombresPCita.setBackground(new java.awt.Color(208, 247, 255));
        txtNombresPCita.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        txtNombresPCita.setForeground(new java.awt.Color(0, 154, 148));
        txtNombresPCita.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtNombresPCita.setToolTipText("");
        txtNombresPCita.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(208, 247, 255), new java.awt.Color(208, 247, 255)));
        txtNombresPCita.setCaretColor(new java.awt.Color(0, 154, 148));
        txtNombresPCita.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtNombresPCita.setName(""); // NOI18N
        txtNombresPCita.setOpaque(false);
        jPanelCitaPaciente.add(txtNombresPCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 260, 30));

        jLabel28.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 154, 148));
        jLabel28.setText("Apellido:");
        jLabel28.setToolTipText("");
        jPanelCitaPaciente.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 140, -1));

        txtApellidoPCita.setBackground(new java.awt.Color(208, 247, 255));
        txtApellidoPCita.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        txtApellidoPCita.setForeground(new java.awt.Color(0, 154, 148));
        txtApellidoPCita.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtApellidoPCita.setToolTipText("");
        txtApellidoPCita.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(208, 247, 255), new java.awt.Color(208, 247, 255)));
        txtApellidoPCita.setCaretColor(new java.awt.Color(0, 154, 148));
        txtApellidoPCita.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtApellidoPCita.setName(""); // NOI18N
        txtApellidoPCita.setOpaque(false);
        jPanelCitaPaciente.add(txtApellidoPCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, 260, 30));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 154, 148));
        jLabel10.setText("Motivo de cita:");
        jLabel10.setToolTipText("");
        jPanelCitaPaciente.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 200, -1));

        jComboBoxMotivoCita.setBackground(new java.awt.Color(208, 247, 255));
        jComboBoxMotivoCita.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jComboBoxMotivoCita.setForeground(new java.awt.Color(0, 154, 148));
        jPanelCitaPaciente.add(jComboBoxMotivoCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 410, 30));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 154, 148));
        jLabel9.setText("Ingresa una fecha de cita");
        jLabel9.setToolTipText("");
        jPanelCitaPaciente.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 260, -1));

        jDateChooser1.setBackground(new java.awt.Color(208, 247, 255));
        jDateChooser1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 154, 148), 3));
        jPanelCitaPaciente.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 260, 40));

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 154, 148));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel27.setText("Id. Cita");
        jLabel27.setToolTipText("");
        jPanelCitaPaciente.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, 80, -1));

        txtIDCita.setBackground(new java.awt.Color(208, 247, 255));
        txtIDCita.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        txtIDCita.setForeground(new java.awt.Color(0, 154, 148));
        txtIDCita.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtIDCita.setToolTipText("");
        txtIDCita.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(208, 247, 255), new java.awt.Color(208, 247, 255)));
        txtIDCita.setCaretColor(new java.awt.Color(0, 154, 148));
        txtIDCita.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtIDCita.setEnabled(false);
        txtIDCita.setName(""); // NOI18N
        txtIDCita.setOpaque(false);
        jPanelCitaPaciente.add(txtIDCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 380, 150, 30));

        javax.swing.GroupLayout jPanelAgendaCitaLayout = new javax.swing.GroupLayout(jPanelAgendaCita);
        jPanelAgendaCita.setLayout(jPanelAgendaCitaLayout);
        jPanelAgendaCitaLayout.setHorizontalGroup(
            jPanelAgendaCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCitaPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE)
        );
        jPanelAgendaCitaLayout.setVerticalGroup(
            jPanelAgendaCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCitaPaciente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Agendar Cita Médica", jPanelAgendaCita);

        jPanel4.setBackground(new java.awt.Color(133, 221, 246));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 154, 148), new java.awt.Color(0, 154, 148)));
        jTable2.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido", "MotivoDeCita", "FechaCita", "NumeroCita"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 763, 280));

        jLabel29.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 154, 148));
        jLabel29.setText("Eliminar cita");
        jLabel29.setToolTipText("");
        jPanel4.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 390, 140, -1));

        txtEliminarCita.setBackground(new java.awt.Color(208, 247, 255));
        txtEliminarCita.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        txtEliminarCita.setForeground(new java.awt.Color(0, 154, 148));
        txtEliminarCita.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtEliminarCita.setToolTipText("");
        txtEliminarCita.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(208, 247, 255), new java.awt.Color(208, 247, 255)));
        txtEliminarCita.setCaretColor(new java.awt.Color(0, 154, 148));
        txtEliminarCita.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtEliminarCita.setName(""); // NOI18N
        txtEliminarCita.setOpaque(false);
        jPanel4.add(txtEliminarCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, 170, 30));

        jLabel30.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 154, 148));
        jLabel30.setText("Cantidad de citas almacenadas");
        jLabel30.setToolTipText("");
        jPanel4.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 320, -1));

        jLabel31.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 154, 148));
        jLabel31.setText("Citas medicas registradas");
        jLabel31.setToolTipText("");
        jPanel4.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 270, -1));

        txtCitasAlmacenadas1.setBackground(new java.awt.Color(208, 247, 255));
        txtCitasAlmacenadas1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        txtCitasAlmacenadas1.setForeground(new java.awt.Color(0, 154, 148));
        txtCitasAlmacenadas1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtCitasAlmacenadas1.setToolTipText("");
        txtCitasAlmacenadas1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(208, 247, 255), new java.awt.Color(208, 247, 255)));
        txtCitasAlmacenadas1.setCaretColor(new java.awt.Color(0, 154, 148));
        txtCitasAlmacenadas1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtCitasAlmacenadas1.setEnabled(false);
        txtCitasAlmacenadas1.setName(""); // NOI18N
        txtCitasAlmacenadas1.setOpaque(false);
        jPanel4.add(txtCitasAlmacenadas1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 90, 30));

        btnEliminarCita.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnEliminarCita.setForeground(new java.awt.Color(208, 247, 255));
        btnEliminarCita.setText("Eliminar");
        btnEliminarCita.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 234, 239), 3));
        btnEliminarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCitaActionPerformed(evt);
            }
        });
        jPanel4.add(btnEliminarCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 390, 160, 30));

        btnConsultaCitaPacientes1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnConsultaCitaPacientes1.setForeground(new java.awt.Color(208, 247, 255));
        btnConsultaCitaPacientes1.setText("Consultar");
        btnConsultaCitaPacientes1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 234, 239), 3));
        btnConsultaCitaPacientes1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaCitaPacientes1ActionPerformed(evt);
            }
        });
        jPanel4.add(btnConsultaCitaPacientes1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 40, 180, 40));

        jTabbedPane1.addTab("Consultar Cita Médica", jPanel4);

        jPanelRegistroPacientes.setBackground(new java.awt.Color(133, 221, 246));
        jPanelRegistroPacientes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "idPaciente", "Nombre(s)", "ApellidoPaterno", "ApellidoMaterno", "FechaNacimiento", "LugarNacimiento", "Género", "TipoSangre", "Alergia"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(5).setHeaderValue("LugarNacimiento");
            jTable1.getColumnModel().getColumn(6).setHeaderValue("Género");
            jTable1.getColumnModel().getColumn(7).setHeaderValue("TipoSangre");
            jTable1.getColumnModel().getColumn(8).setHeaderValue("Alergia");
        }

        jPanelRegistroPacientes.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 783, 320));

        jLabel32.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 154, 148));
        jLabel32.setText("Registro de pacientes");
        jLabel32.setToolTipText("");
        jPanelRegistroPacientes.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 230, -1));

        jLabel33.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 154, 148));
        jLabel33.setText("Eliminar paciente");
        jLabel33.setToolTipText("");
        jPanelRegistroPacientes.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 200, -1));

        txtIdPaciente.setBackground(new java.awt.Color(208, 247, 255));
        txtIdPaciente.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        txtIdPaciente.setForeground(new java.awt.Color(0, 154, 148));
        txtIdPaciente.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtIdPaciente.setToolTipText("");
        txtIdPaciente.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(208, 247, 255), new java.awt.Color(208, 247, 255)));
        txtIdPaciente.setCaretColor(new java.awt.Color(0, 154, 148));
        txtIdPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtIdPaciente.setName(""); // NOI18N
        txtIdPaciente.setOpaque(false);
        jPanelRegistroPacientes.add(txtIdPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 390, 90, 30));

        btnEliminarPaciente.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnEliminarPaciente.setForeground(new java.awt.Color(208, 247, 255));
        btnEliminarPaciente.setText("Eliminar");
        btnEliminarPaciente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 234, 239), 3));
        btnEliminarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPacienteActionPerformed(evt);
            }
        });
        jPanelRegistroPacientes.add(btnEliminarPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 390, 160, 30));

        btnConsultaPacientes.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnConsultaPacientes.setForeground(new java.awt.Color(208, 247, 255));
        btnConsultaPacientes.setText("Consultar");
        btnConsultaPacientes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 234, 239), 3));
        btnConsultaPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaPacientesActionPerformed(evt);
            }
        });
        jPanelRegistroPacientes.add(btnConsultaPacientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 160, 30));

        jTabbedPane1.addTab("Registro de pacientes", jPanelRegistroPacientes);

        jPanelConfiguraciones.setBackground(new java.awt.Color(133, 221, 246));
        jPanelConfiguraciones.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 154, 148));
        jLabel11.setText("Se espera una actualización para esta sección...\n");
        jLabel11.setToolTipText("");
        jPanelConfiguraciones.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, -1, -1));

        jTabbedPane1.addTab("Configuración", jPanelConfiguraciones);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 980, 450));

        btnCerrarSesion.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnCerrarSesion.setForeground(new java.awt.Color(208, 247, 255));
        btnCerrarSesion.setText("Cerrar Sesión");
        btnCerrarSesion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 234, 239), 3));
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });
        jPanel1.add(btnCerrarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 20, 110, 50));

        btnMenu1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnMenu1.setForeground(new java.awt.Color(208, 247, 255));
        btnMenu1.setText("Menú");
        btnMenu1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 234, 239), 3));
        btnMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenu1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnMenu1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 110, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  private void aceptarOpcion() {

        jComboBoxMotivoCita.addItem("Dolor de (Garganta*, Musculos*, Cabeza*, Estómago, Oído*)");
        jComboBoxMotivoCita.addItem("Suturas");
        jComboBoxMotivoCita.addItem("Checado de presión");
        jComboBoxMotivoCita.addItem("Consulta general");
        jComboBoxMotivoCita.addItem("Inyección");
        jComboBoxMotivoCita.addItem("Planificación familiar");
        jComboBoxMotivoCita.addItem("Nebulizaciones");
        jComboBoxMotivoCita.addItem("Curaciones");
        jComboBoxMotivoCita.addItem("Lavado óptico");
        jComboBoxMotivoCita.addItem("Prueba de nivel de azúcar (Glucosa)");

    }

    private void agregarTextoPrompt() {

        TextPrompt nombreP = new TextPrompt("Introduce el id del paciente", txtIdPaciente);
        TextPrompt eliminarCita = new TextPrompt("Introduce el No. de cita", txtEliminarCita);

        TextPrompt nombrePCita = new TextPrompt("Ingrese un nombre...", txtNombresPCita);
        TextPrompt apellidoPCita = new TextPrompt("Ingrese un apellido...", txtApellidoPCita);
        TextPrompt idCita = new TextPrompt("Número de cita...", txtIDCita);
        TextPrompt eliminarPaciente = new TextPrompt("idPaciente a eliminar...", txtIdPaciente);

    }

    private void contarCitas() {

        String sql = "SELECT * FROM citas_medicas;";

        try {

            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            if (rs.last()) {
                txtEliminarCita.setText(Integer.toString(rs.getRow()));
            } else {
                txtEliminarCita.setText("0");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error de cantidad... " + ex.getMessage());
        }

    }

    public void consultarCItas() {
        String sql = "SELECT * FROM citas_medicas;";

        try {
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            DefaultTableModel tm = (DefaultTableModel) jTable2.getModel();
            tm.setRowCount(0);

            while (rs.next()) {
                Object o[] = {rs.getString("nombrePaciente"), rs.getString("ApellidoPaciente"), rs.getString("motivoCita"), rs.getString("fechaCita"), rs.getString("numCita")};
                tm.addRow(o);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error de consulta... " + ex.getMessage());
        }
    }

    public void eliminarCita() {
        int numCita = Integer.parseInt(txtEliminarCita.getText());
        String sql = "DELETE FROM citas_medicas WHERE numCita = " + numCita + ";";

        try {
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Cita eliminada... ");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error de eliminado... " + ex.getMessage());
        }

    }

    private void agendarCitaMedica2() {
        String fechaCita = jDateChooser1.getDate().toString();
        String motivoCita = jComboBoxMotivoCita.getSelectedItem().toString();

        Random random = new Random(System.currentTimeMillis());
        Integer numAleatorio = random.nextInt(300);

        String idCita = numAleatorio.toString();

        String sql = "INSERT INTO citas_medicas (nombrePaciente,apellidoPaciente,motivoCita,fechaCita,numCita) VALUES (?,?,?,?,?);";

        try {
            PreparedStatement pst = conn.prepareStatement(sql);

            pst.setString(1, txtNombresPCita.getText());
            pst.setString(2, txtApellidoPCita.getText());
            pst.setString(3, motivoCita);
            pst.setString(4, fechaCita);
            pst.setString(5, idCita);

            txtIDCita.setText(idCita);

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Se ha registrado al paciente...");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error de cita" + ex.getMessage());
        }
    }


    private void btnSolicitarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolicitarCitaActionPerformed

        validarCampoCita();
    }//GEN-LAST:event_btnSolicitarCitaActionPerformed

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        LoginMedico login = new LoginMedico();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    private void btnMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenu1ActionPerformed
        MenuPrincipal menuP = new MenuPrincipal();
        menuP.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnMenu1ActionPerformed

    private void btnConsultaCitaPacientes1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaCitaPacientes1ActionPerformed
        consultarCItas();
    }//GEN-LAST:event_btnConsultaCitaPacientes1ActionPerformed

    private void btnEliminarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCitaActionPerformed
        eliminarCita();
    }//GEN-LAST:event_btnEliminarCitaActionPerformed

    private void btnConsultaPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaPacientesActionPerformed
        consultarRegistroPacientes();
    }//GEN-LAST:event_btnConsultaPacientesActionPerformed

    private void btnEliminarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPacienteActionPerformed
        eliminarPaciente();
    }//GEN-LAST:event_btnEliminarPacienteActionPerformed

    public void consultarRegistroPacientes() {
        String sql = "SELECT * FROM registro_pacientes;";

        try {

            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();
            tm.setRowCount(0);

            while (rs.next()) {
                Object o[] = {rs.getInt("idPaciente"), rs.getString("nombrePaciente"), rs.getString("apellidoPaternoP"), rs.getString("apellidoMaternoP"), rs.getDate("fechaNacPaciente"), rs.getString("lugarNacPaciente"),
                    rs.getString("generoPaciente"), rs.getString("tipoSangrePaciente"), rs.getString("alergiaPaciente")};
                tm.addRow(o);
            }
            contarCitas();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error de consulta... " + ex.getMessage());
        }

    }

    public void eliminarPaciente() {
        int idPaciente = Integer.parseInt(txtIdPaciente.getText());

        String sql = "DELETE FROM registro_pacientes WHERE idPaciente = " + idPaciente + ";";

        try {

            PreparedStatement pst = conn.prepareStatement(sql);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Se ha eliminado el registro correctamente...");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error de eliminado... " + ex.getMessage());
        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuMedico().setVisible(true);
            }
        });
    }

    public Icon setIcono(String url, JButton boton) {
        ImageIcon icon = new ImageIcon(this.getClass().getResource(url));

        int ancho = boton.getWidth();
        int alto = boton.getHeight();

        ImageIcon icono = new ImageIcon(icon.getImage().getScaledInstance(ancho, alto, Image.SCALE_DEFAULT));

        return icon;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JButton btnConsultaCitaPacientes1;
    private javax.swing.JButton btnConsultaPacientes;
    private javax.swing.JButton btnEliminarCita;
    private javax.swing.JButton btnEliminarPaciente;
    private javax.swing.JButton btnMenu1;
    private javax.swing.JButton btnSolicitarCita;
    private javax.swing.JComboBox<String> jComboBoxMotivoCita;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelAgendaCita;
    private javax.swing.JPanel jPanelCitaPaciente;
    private javax.swing.JPanel jPanelConfiguraciones;
    private javax.swing.JPanel jPanelRegistroPacientes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtApellidoPCita;
    private javax.swing.JTextField txtCitasAlmacenadas1;
    private javax.swing.JTextField txtEliminarCita;
    private javax.swing.JTextField txtIDCita;
    private javax.swing.JTextField txtIdPaciente;
    private javax.swing.JTextField txtNombresPCita;
    // End of variables declaration//GEN-END:variables

    private void validarCampoCita() {
        if (txtNombresPCita.getText().isEmpty() || txtApellidoPCita.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No puede dejar campos sin completar");
        } else {

            agendarCitaMedica2();
            limpiarCamposAgendaCita();
        }

    }

    private void limpiarCamposAgendaCita() {
        txtNombresPCita.setText("");
        txtApellidoPCita.setText("");

    }

}
